# -*- coding: utf-8 -*-
"""NSBEHacks2T4_Name_Extraction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EK2cKMUc0XIkg-M_uJGEg27GoMas7EdW
"""

# prompt: generate code to extract a persons name from text using cohere entity extraction API

import cohere

api_key = 'I8r02M2ydb2vZ5jv82PXGMASgwdxCLBq5J2uZuNc'

co = cohere.Client(api_key)

import pandas as pd

# Provided dataset of sentences
sentences = [
    "John Smith is a famous actor.",
    "The author of this book is Jane Austen.",
    "Dr. Martin Luther King Jr. gave a famous speech.",
    "The CEO of the company is Mark Zuckerberg.",
    "Emily Dickinson was a renowned poet."
]

sentences_2 = [
"I am hungry",
"Most know me as Johnny Depp, but only my closest friends call me John",
"Ryan Reynolds is my brother, which confuses people because my name is Debby Ryan",
"I am sorry, what is your name?",
"I have a pretty long name, do you think you can pronounce/spell it correctly, it is Marie Antonette De Silva"
]

name_examples = [
("John", "My name is John"),
("none", "I am hungry"),
("Johnny Depp", "Most know me as Johnny Depp, but only my closest friends call me John"),
("Debby Ryan", "Ryan Reynolds is my brother, which confuses people because my name is Debby Ryan"),
("none", "I am sorry, what is your name?"),
("Marie Antonette De Silva", "I have a pretty long name, do you think you can pronounce/spell it correctly, it is Marie Antonette De Silva"),
]

class cohereExtractor():
    def __init__(self, examples, example_labels, labels, task_desciption, example_prompt):
        self.examples = examples
        self.example_labels = example_labels
        self.labels = labels
        self.task_desciption = task_desciption
        self.example_prompt = example_prompt

    def make_prompt(self, example):
        examples = self.examples + [example]
        labels = self.example_labels + [""]
        return (self.task_desciption +
                "\n---\n".join( [examples[i] + "\n" +
                                self.example_prompt +
                                 labels[i] for i in range(len(examples))]))

    def extract(self, example):
      extraction = co.generate(
          model='c4ai-aya',
          prompt=self.make_prompt(example),
          max_tokens=10,
          temperature=0.1,
          stop_sequences=["\n"])
      return(extraction.generations[0].text)


cohereNameExtractor = cohereExtractor([e[1] for e in name_examples],
                                       [e[0] for e in name_examples], [],
                                       "",
                                       "extract the name from the sentence: ")

# results = []
# for sentence in sentences:
#     try:
#         extracted_name = cohereNameExtractor.extract(sentence)
#         results.append(extracted_name)
#     except Exception as e:
#         print('ERROR: ', e)

# # Create a DataFrame with the extracted person names
# df = pd.DataFrame({"Person Name": results})
# print(df.head())

# pd.DataFrame(data={'text': sentences, 'extracted_text': results})

# results_2 = []
# for sentence in sentences_2:
#     try:
#         extracted_name = cohereNameExtractor.extract(sentence)
#         results_2.append(extracted_name)
#     except Exception as e:
#         print('ERROR: ', e)

# # Create a DataFrame with the extracted person names
# df = pd.DataFrame({"Person Name": results_2})
# print(df.head())

# pd.DataFrame(data={'text': sentences_2, 'extracted_text': results_2})